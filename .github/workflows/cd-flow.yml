name: CD flow - Build & Publish

on:
  push:
    branches:
      - main

jobs:
  # docker-build:
  #   name: Docker build & publish - latest
  #   runs-on: ubuntu-latest
  #   environment: actions
  #   strategy:
  #     matrix:
  #       node-version: [20.x]

  #   steps:
  #     - name: Login to Harbor
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ${{ secrets.HARBOR_HOST }}
  #         username: ${{ secrets.HARBOR_USERNAME }}
  #         password: ${{ secrets.HARBOR_TOKEN }}
  #     - uses: actions/checkout@v3
  #     - name: Build and push image
  #       env:
  #         HARBOR_HOST: ${{ secrets.HARBOR_HOST }}
  #       run: |
  #         docker build -f apps/api/Dockerfile . -t ${HARBOR_HOST}/royfuwei/rfjs-api:latest
  #         docker push ${HARBOR_HOST}/royfuwei/rfjs-api:latest
  helm-release:
    name: Helm release - rfjs-api
    uses: royfuwei/rfjs-devops/.github/workflows/release-helm.yml@main
    with:
      config-path: .github/labeler.yml
      projectName: rfjs-api
    secrets:
      HARBOR_HOST: ${{ secrets.HARBOR_HOST }}
      HARBOR_USERNAME: ${{ secrets.HARBOR_USERNAME }}
      HARBOR_TOKEN: ${{ secrets.HARBOR_TOKEN }}
      envPAT: ${{ secrets.GIT_TOKEN }}

  deploy-rfjs-api:
    needs: helm-release
    name: Helm release - rfjs-api
    uses: royfuwei/rfjs-devops/.github/workflows/deploy-rfjs-api.yml@main
    with:
      projectName: rfjs-api
    secrets:
      HARBOR_HOST: ${{ secrets.HARBOR_HOST }}
      HARBOR_USERNAME: ${{ secrets.HARBOR_USERNAME }}
      HARBOR_TOKEN: ${{ secrets.HARBOR_TOKEN }}
      KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      envPAT: ${{ secrets.GIT_TOKEN }}
