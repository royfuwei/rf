name: CD flow - Build & Publish

on:
  push:
    branches:
      - main

jobs:
  docker-build:
    name: Docker build & publish - rfjs-api latest
    runs-on: ubuntu-latest
    environment: actions
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Login to Harbor
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.HARBOR_HOST }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_TOKEN }}
      - uses: actions/checkout@v3
      - name: Build and push image
        env:
          HARBOR_HOST: ${{ secrets.HARBOR_HOST }}
        run: |
          docker build -f apps/api/Dockerfile . -t ${HARBOR_HOST}/royfuwei/rfjs-api:latest
          docker push ${HARBOR_HOST}/royfuwei/rfjs-api:latest
  helm-release:
    needs: docker-build
    name: Helm release - rfjs-api
    uses: royfuwei/rf-devops/.github/workflows/release-helm.yml@main
    with:
      config-path: .github/labeler.yml
      projectName: rfjs-api
    secrets:
      HARBOR_HOST: ${{ secrets.HARBOR_HOST }}
      HARBOR_USERNAME: ${{ secrets.HARBOR_USERNAME }}
      HARBOR_TOKEN: ${{ secrets.HARBOR_TOKEN }}
      envPAT: ${{ secrets.GIT_TOKEN }}

  deploy-rfjs-api:
    needs: helm-release
    name: Helm release - rfjs-api
    uses: royfuwei/rf-devops/.github/workflows/rfjs-api-deploy-k8s.yml@main
    with:
      projectName: rfjs-api
    secrets:
      HARBOR_HOST: ${{ secrets.HARBOR_HOST }}
      HARBOR_USERNAME: ${{ secrets.HARBOR_USERNAME }}
      HARBOR_TOKEN: ${{ secrets.HARBOR_TOKEN }}
      KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      envPAT: ${{ secrets.GIT_TOKEN }}
      ENV_DB_MONGO_URI: ${{ secrets.ENV_DB_MONGO_URI }}
      ENV_PUBLIC_SUPABASE_URL: ${{ secrets.ENV_PUBLIC_SUPABASE_URL }}
      ENV_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.ENV_PUBLIC_SUPABASE_ANON_KEY }}
      ENV_LINE_CHANNEL_ID: ${{ secrets.ENV_LINE_CHANNEL_ID }}
      ENV_LINE_CHANNEL_ACCESS_TOKEN: ${{ secrets.ENV_LINE_CHANNEL_ACCESS_TOKEN }}
      ENV_LINE_CHANNEL_SECRET: ${{ secrets.ENV_LINE_CHANNEL_SECRET }}
      ENV_LINE_NOTIFY_CLIENT_ID: ${{ secrets.ENV_LINE_NOTIFY_CLIENT_ID }}
      ENV_LINE_NOTIFY_CLIENT_SECRET: ${{ secrets.ENV_LINE_NOTIFY_CLIENT_SECRET }}
