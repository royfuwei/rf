name: CI flow - Nx and SonarQube Scan

on:
  push:
    branches:
      - main

jobs:
  ci-with-nx:
    name: CI with NX
    runs-on: ubuntu-latest
    environment: actions
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.RFJS_GITHUB_TOKEN }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        id: 'setSHAs'
        uses: nrwl/nx-set-shas@v3
        with:
          main-branch-name: main

      - name: Install dependencies
        run: npm ci

      # - name: Run NX lint, test, and tsc
      #   run: |
      #     npx nx affected \
      #       --target=lint,tsc,test \
      #       --base=${{ steps.setSHAs.outputs.base }} \
      #       --head=${{ steps.setSHAs.outputs.head }} \
      #       --passWithNoTests \
      #       --parallel=3

  ci-with-sonarqube-scan:
    # https://docs.sonarsource.com/sonarqube/10.5/devops-platform-integration/github-integration/introduction/
    # https://docs.sonarsource.com/sonarqube/latest/devops-platform-integration/github-integration/monorepo/
    name: CI with SonarQube Scan
    runs-on: ubuntu-latest
    needs: ci-with-nx
    steps:
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clones is recommended for improving the relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      with:
        args:
            # Unique key of your project. You can find it in SonarQube > [my project] > Project Information (top-right menu)
            # mandatory
            -Dsonar.projectKey='royfuwei-rfjs'
            # Comma-separated paths to directories containing main source files.
            #-Dsonar.sources= # optional, default is project base directory
            # When you need the analysis to take place in a directory other than the one from which it was launched
            #-Dsonar.projectBaseDir= # optional, default is .
            # Comma-separated paths to directories containing test source files.
            #-Dsonar.tests= # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
            # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
            #-Dsonar.verbose= # optional, default is false