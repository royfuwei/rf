name: CD Production

on:
  pull_request_target:
    branches:
      - production
    types:
      - closed

jobs:
  run-ci:
    name: Run CI flow
    uses: ./.github/workflows/run-ci.yml
    secrets:
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GIT_TOKEN: ${{ secrets.GIT_TOKEN }}

  release-project:
    name: Release Production
    uses: ./.github/workflows/release.yml
    needs: run-ci
    secrets:
      GIT_TOKEN: ${{ secrets.GIT_TOKEN }}

  deploy-local-k8s:
    name: Deploy local k8s
    needs: release-project
    uses: ./.github/workflows/deploy-local-k8s.yml
    with:
      appVersion: ${{ needs.release-project.outputs.current-version  }}
      helmVersion: ${{ needs.release-project.outputs.current-version  }}
      environment: k8s-rfjs
    secrets:
      HARBOR_HOST: ${{ secrets.HARBOR_HOST }}
      HARBOR_USERNAME: ${{ secrets.HARBOR_USERNAME }}
      HARBOR_TOKEN: ${{ secrets.HARBOR_TOKEN }}
      KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
      ENV_DB_MONGO_URI: ${{ secrets.ENV_DB_MONGO_URI }}
      ENV_PUBLIC_SUPABASE_URL: ${{ secrets.ENV_PUBLIC_SUPABASE_URL }}
      ENV_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.ENV_PUBLIC_SUPABASE_ANON_KEY }}
      ENV_LINE_CHANNEL_ID: ${{ secrets.ENV_LINE_CHANNEL_ID }}
      ENV_LINE_CHANNEL_ACCESS_TOKEN: ${{ secrets.ENV_LINE_CHANNEL_ACCESS_TOKEN }}
      ENV_LINE_CHANNEL_SECRET: ${{ secrets.ENV_LINE_CHANNEL_SECRET }}
      ENV_LINE_NOTIFY_CLIENT_ID: ${{ secrets.ENV_LINE_NOTIFY_CLIENT_ID }}
      ENV_LINE_NOTIFY_CLIENT_SECRET: ${{ secrets.ENV_LINE_NOTIFY_CLIENT_SECRET }}
